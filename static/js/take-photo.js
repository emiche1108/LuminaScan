// „É¢„Éá„É´„ÅÆ„Éë„Çπ„ÇíÊåáÂÆö
const MODEL_URL = '/static/models/weights';

// „É¢„Éá„É´„ÅÆ„É≠„Éº„Éâ
Promise.all([
    faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), //È°î„ÅÆÊ§úÂá∫
    faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), //68ÂÄã„ÅÆÂ∫ßÊ®ô„ÅÆÊ§úÂá∫
    faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL), // Ë°®ÊÉÖÊ§úÂá∫
    faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL) // È°îË™çË≠ò
]).then(() => {
    console.log(" „É¢„Éá„É´„ÅÆË™≠„ÅøËæº„Åø„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ");
    document.getElementById('start-camera').addEventListener('click', startCamera);
}).catch((err) => {
    console.error(" „É¢„Éá„É´„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:", err);
});



// „Ç´„É°„É©„ÇíËµ∑Âãï„Åô„ÇãÈñ¢Êï∞
async function startCamera() {
    const video = document.getElementById('video');
    const cameraContainer = document.getElementById('camera-container');
    const startButton = document.getElementById('start-camera');

    try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;
        video.style.display = 'block';
        cameraContainer.style.display = 'block';
        startButton.style.display = 'none';
        
        detectFace();  // È°îË™çË≠òÈñãÂßã
    } catch (err) {
        console.error(' „Ç´„É°„É©„ÅÆËµ∑Âãï„Å´Â§±Êïó„Åó„Åæ„Åó„Åü', err);
    }
}



// È°îË™çË≠ò
async function detectFace() {
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const context = canvas.getContext('2d');
    const takePhotoButton = document.getElementById('take-photo');
    const warningMessage = document.getElementById('error-message');

    
    video.addEventListener('play', async () => {
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;

        setInterval(async () => {
            const detections = await faceapi.detectAllFaces(video)
                .withFaceLandmarks()
                .withFaceDescriptors();

            context.clearRect(0, 0, canvas.width, canvas.height);

            faceapi.draw.drawDetections(canvas, detections);
            faceapi.draw.drawFaceLandmarks(canvas, detections);

        
            const detection = detections[0];
            // 99ÁÇπ‰ª•‰∏ä„ÅßÈ°îË™çË≠ò
            if (detection) {
                const score = detection.detection.score;
                if (score < 0.99) {
                    takePhotoButton.style.display = 'none';
                    document.getElementById('error-message').innerText = 'È°î„ÅåË™çË≠ò„Åß„Åç„Åæ„Åõ„Çì„ÄÇ‰ΩçÁΩÆ„ÇíË™øÊï¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ';
                    document.getElementById('error-message').style.display = 'block';
                } else {
                    takePhotoButton.style.display = 'block';
                    document.getElementById('error-message').style.display = 'none';
                }
            }
        }, 1000);
    });
}



//  ÊíÆÂΩ±„Éú„Çø„É≥„ÅåÊäº„Åï„Çå„Åü„ÇâÂÜôÁúü„ÇíÊíÆ„Çã
async function capturePhoto() {
    const canvas = document.getElementById('photo-canvas');
    const context = canvas.getContext('2d');
    const video = document.getElementById('video');
    const takePhotoButton = document.getElementById('take-photo');
  
    if (!takePhotoButton) {
        console.error("‚ùå ÊíÆÂΩ±„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºÅ");
        return;
    }

    // ÊíÆÂΩ±„Éú„Çø„É≥„Çí‰∏ÄÊôÇÁöÑ„Å´ÁÑ°ÂäπÂåñÔºàÈÄ£Á∂ö„ÇØ„É™„ÉÉ„ÇØÈò≤Ê≠¢Ôºâ
    takePhotoButton.disabled = true;

    // ÂÜôÁúüÊíÆÂΩ±
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    context.drawImage(video, 0, 0, canvas.width, canvas.height);

    // Base64ÂΩ¢Âºè„ÅßÂèñÂæó
    const photoData = canvas.toDataURL('image/png');

    // Flask „Å´ÈÄÅ‰ø°„Åô„Çã„Éá„Éº„Çø
    const requestData = JSON.stringify({
        photoData: photoData,
        filename: "image1.png"
    });
    

    //Flask „Å´ÈÄÅ‰ø°
    try {
        const response = await fetch('/take_photo_page', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: requestData
        });
        console.log("üì© Flask „Å∏„ÅÆ„É™„ÇØ„Ç®„Çπ„ÉàÈÄÅ‰ø°ÂÆå‰∫ÜÔºÅ„Çπ„ÉÜ„Éº„Çø„Çπ:", response.status);

        // „É¨„Çπ„Éù„É≥„Çπ„ÅåÊ≠£Â∏∏„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        if (!response.ok) {
            const errorText = await response.text();
            console.error(` ÁîªÂÉèÈÄÅ‰ø°„Ç®„É©„Éº: ${response.status} - ${errorText}`);
            alert(`ÁîªÂÉè„ÅÆÈÄÅ‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü: ${errorText}`);
            takePhotoButton.disabled = false;
            return;
        }

        let responseData = await response.json();
        console.log("‚úÖ Flask „Åã„Çâ„ÅÆ„É¨„Çπ„Éù„É≥„Çπ:", responseData);

        
        if (responseData.redirect_url) {
            console.log("üîÑ ÁîªÂÉèÈÄÅ‰ø°ÊàêÂäüÔºÅ„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Å∏ÁßªÂãï");

            // üî• 4Ô∏è‚É£ „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Éö„Éº„Ç∏ (`/animation`) „Å´ÈÅ∑Áßª
            window.location.assign('/animation');

            // „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Éö„Éº„Ç∏„Åß 10 ÁßíÂæå„Å´„É™„Ç∂„É´„Éà„Å∏ÈÅ∑Áßª„Åô„ÇãÂá¶ÁêÜ„ÅØ Flask ÂÅ¥ or animation.js „ÅßÂà∂Âæ°
        } else {
            console.error("‚ùå `redirect_url` „Åå„É¨„Çπ„Éù„É≥„Çπ„Å´Âê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åõ„ÇìÔºÅ", responseData);
            alert("„Ç®„É©„Éº: „É™„ÉÄ„Ç§„É¨„ÇØ„ÉàURL„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ");
            takePhotoButton.disabled = false;
        }
    } catch (error) {
        console.error("‚ùå „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº:", error);
        alert("„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇÊé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ");
        takePhotoButton.disabled = false;
    }
}



// HTML„Å´ `capturePhoto` „ÇíÁ¥ê‰ªò„Åë
document.getElementById('take-photo').addEventListener('click', capturePhoto);
